#!/bin/bash
set -e

version=$(grep "\"version\"" package.json | cut -d ":" -f 2 | cut -d "\"" -f 2)
sed -i "s/version:.*/version: ${version}/" config/building/snapcraft.yaml

# Replace package.json entry
node -e "
  const fs = require('fs');
  const pkg = JSON.parse(fs.readFileSync('package.json', 'utf8'));
  pkg.devDependencies['electron'] = '37.0.0';
  fs.writeFileSync('package.json', JSON.stringify(pkg, null, 2));
"

# Replace package-lock.json entry
node -e "
  const fs = require('fs');
  const lock = JSON.parse(fs.readFileSync('package-lock.json', 'utf8'));
  if (lock.packages && lock.packages['node_modules/electron']) {
    lock.packages['node_modules/electron'].version = '37.0.0';
    lock.packages['node_modules/electron'].resolved = 'https://registry.npmjs.org/electron/-/electron-37.0.0.tgz';
    lock.packages['node_modules/electron'].integrity = 'sha512-QhdtwF7Hq1qfnUXigYp1+bTGuLYTmYTir5KnrMXxWJoWfNhURRU2EYuTktBHoWT5mtv/GmmRjGEiR3IS2p9SSA==';
  }
  fs.writeFileSync('package-lock.json', JSON.stringify(lock, null, 2));
"

npm install
npm run build
npm run pack:arm64
chmod +x scripts/snap/*.sh
mkdir -p snap
mv scripts/snap/gui snap
mv config/building/snapcraft.yaml snap
if [ -e "dist/linux-arm64-unpacked" ]; then
  mv dist/linux-arm64-unpacked dist/linux-unpacked
fi
cp scripts/snap/*.sh dist/linux-unpacked
snapcraft --verbose pack
