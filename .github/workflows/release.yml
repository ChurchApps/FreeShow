name: Release
on:
  push:
    branches:
      - "main"
  workflow_dispatch:

jobs:
  publish_windows:
    name: "Publish Windows"
    runs-on: windows-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Node.js and NPM
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install dependencies
        # npm ci is better, but requires package-lock.json file
        run: npm install

      - name: Build and release app
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        run: npm run release

  publish_linux:
    name: "Publish Linux x64"
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Node.js and NPM
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install libraries
        run: sudo apt-get install libfontconfig1-dev --fix-missing

      - name: Install dependencies
        run: npm install

      - name: Build and release app
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run release

  # This needs it's own build
  # https://github.com/ChurchApps/FreeShow/issues/562
  publish_linux_arm:
    name: "Publish Linux arm64"
    runs-on: ubuntu-24.04-arm

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Node.js and NPM
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install libraries
        run:
          |
          sudo apt-get update
          sudo apt-get install -y libfontconfig1-dev uuid-dev --fix-missing

      - name: Use stock Electron on ARM64
        run: |
          # Replace package.json entry
          node -e "
            const fs = require('fs');
            const pkg = JSON.parse(fs.readFileSync('package.json', 'utf8'));
            pkg.devDependencies['electron'] = '37.0.0';
            fs.writeFileSync('package.json', JSON.stringify(pkg, null, 2));
          "

          # Replace package-lock.json entry
          node -e "
            const fs = require('fs');
            const lock = JSON.parse(fs.readFileSync('package-lock.json', 'utf8'));
            if (lock.packages && lock.packages['node_modules/electron']) {
              lock.packages['node_modules/electron'].version = '37.0.0';
              lock.packages['node_modules/electron'].resolved = 'https://registry.npmjs.org/electron/-/electron-37.0.0.tgz';
              lock.packages['node_modules/electron'].integrity = 'sha512-QhdtwF7Hq1qfnUXigYp1+bTGuLYTmYTir5KnrMXxWJoWfNhURRU2EYuTktBHoWT5mtv/GmmRjGEiR3IS2p9SSA==';
            }
            fs.writeFileSync('package-lock.json', JSON.stringify(lock, null, 2));
          "

      - name: Install dependencies
        run: npm install

      - name: Install FPM
        run:
          |
          sudo apt-get install ruby ruby-dev build-essential
          sudo gem install --no-document fpm

      # wait because this will only publish if the draft exists
      - name: Sleep for 1 minute
        run: sleep 60s
        shell: bash

      - name: Build and release app
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          USE_SYSTEM_FPM: true
          ELECTRON_MIRROR: "https://registry.npmjs.org/electron/-/electron-"
        run: npm run release:arm64

  publish_mac:
    name: "Publish MacOS"
    runs-on: macos-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Node.js and NPM
        uses: actions/setup-node@v4
        with:
          node-version: 22

      # Change Python version: https://github.com/nodejs/node-gyp/issues/2869
      - name: Install Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # This probably does not make any difference.
      - name: Install node-gyp
        run: npm install -g node-gyp

      - name: Install dependencies
        run: npm install

      - name: Install dmg-license
        run: npm i dmg-license

      # for some reason the build command don't continue after the rollup build
      - name: Sleep for 3 minutes
        run: sleep 180
        shell: bash

      - name: Build and release app
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          APPLE_ID: ${{ secrets.APPLEID }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLEIDPASS }}
          APPLE_TEAM_ID: ${{ secrets.APPLETEAMID }}
        run: npm run release
